name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: build (${{ matrix.os }}, python-${{ matrix.python-version }}, node-${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ["3.9", "3.10"]
        node-version: ["16", "18"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up nodejs ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade --requirement tests_requirements.txt
        python -m pip install --upgrade --requirement build_requirements.txt
    - name: Run tox
      run: tox
    - name: Check cli
      if: matrix.os == 'ubuntu-latest'
      run: tox -e cli
    - name: Test frontend
      if: matrix.os == 'ubuntu-latest'
      run: tox -e web
    - name: Upload coverage to Codecov
      if: >-
        matrix.python-version == 3.10 &&
        matrix.node-version == 18
      uses: codecov/codecov-action@v3
      with:
        verbose: true
    - name: Build a source package
      run: python -m build -s
    - name: Upload source package as artifact
      if: >-
        matrix.python-version == 3.10 &&
        matrix.node-version == 18 &&
        matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        path: ./dist/*.tar.gz
    - name: Build wheels
      if: >-
        matrix.python-version == 3.10 &&
        matrix.node-version == 18
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_SKIP: "cp36-* cp37-* cp38-* pp*"
        CIBW_BUILD_FRONTEND: "build"
    - name: Upload wheels as artifacts
      if: >-
        matrix.python-version == 3.10 &&
        matrix.node-version == 18
      uses: actions/upload-artifact@v3
      with:
        path: ./dist/*.whl
  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        path: ./dist
    - name: Check dist/ content
      run: ls -lR ./dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
